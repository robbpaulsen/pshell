{
  "assertion": {
    "assert": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">assert</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed expression is true</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expression: <span class=\"storage-type\">boolean</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expression to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "between": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">between</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in actual number or date is between the passed in min and max values</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual number or date to evaluate</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>min: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected min number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>max: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected max number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "closeto": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">closeTo</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in actual number or date is expected to be close to it within +/- a passed delta and optional datepart</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>delta: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The +/- delta to range it</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>datePart: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">If passed in values are dates, then you can use the datepart to evaluate it</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "deepkey": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">deepKey</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a given key exists in the passed in struct by searching the entire nested structure</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">struct</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object/struct</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>key: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The key to check for existence anywhere in the nested structure</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "fail": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">fail</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Fail assertion</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "getstringname": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">getStringName</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Get a string name representation of an incoming object.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>obj: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "includes": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">includes</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the given \"needle\" argument exists in the incoming string or array with no case-sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check if the incoming needle exists in. This can be a string or array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>needle: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The substring to find in a string or the value to find in an array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "includeswithcase": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">includesWithCase</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the given \"needle\" argument exists in the incoming string or array with case-sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check if the incoming needle exists in. This can be a string or array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>needle: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The substring to find in a string or the value to find in an array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "instanceof": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">instanceOf</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual object is of the expected instance type</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>typeName: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The typename to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isempty": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isEmpty</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a a given string, array, structure or query is empty</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check the length for, this can be a string, array, structure or query</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isequal": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isEqual</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is equal to each other, no case is required</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isequalwithcase": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isEqualWithCase</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert strings are equal to each other with case.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isfalse": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isFalse</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is false</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">boolean</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isgt": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isGT</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is greater than the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isgte": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isGTE</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is greater than or equal the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isjson": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isJSON</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is JSON</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "islt": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isLT</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is less than the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "islte": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isLTE</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is less than or equal the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isnotempty": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isNotEmpty</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a a given string, array, structure or query is not empty</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check the length for, this can be a string, array, structure or query</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isnotequal": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isNotEqual</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is not equal to each other, no case is required</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isnotsameinstance": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isNotSameInstance</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert an object is not the same instance as another object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "issameinstance": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isSameInstance</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert an object is the same instance as another object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "istrue": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">isTrue</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is true</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">boolean</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "key": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">key</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a given key exists in the passed in struct/object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object/struct</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>key: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The key to check for existence</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "lengthof": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">lengthOf</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert the size of a given string, array, structure or query</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check the length for, this can be a string, array, structure or query</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>length: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The length to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "match": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">match</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual data matches the incoming regular expression with no case sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The regex to check with</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "matchwithcase": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">matchWithCase</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual data matches the incoming regular expression with case sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The regex to check with</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notdeepkey": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notDeepKey</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a given key DOES NOT exists in the passed in struct by searching the entire nested structure</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">struct</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object/struct</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>key: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The key to check for existence anywhere in the nested structure</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notincludes": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notIncludes</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the given \"needle\" argument exists in the incoming string or array with no case-sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check if the incoming needle exists in. This can be a string or array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>needle: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The substring to find in a string or the value to find in an array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notincludeswithcase": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notIncludesWithCase</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the given \"needle\" argument does not exist in the incoming string or array with case-sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check if the incoming needle exists in. This can be a string or array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>needle: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The substring to find in a string or the value to find in an array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notinstanceof": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notInstanceOf</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual object is NOT of the expected instance type</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>typeName: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The typename to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notkey": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notKey</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a given key DOES NOT exist in the passed in struct/object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object/struct</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>key: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The key to check for existence</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notlengthof": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notLengthOf</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert the size of a given string, array, structure or query</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to check the length for, this can be a string, array, structure or query</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>length: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The length to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notmatch": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notMatch</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual data does NOT match the incoming regular expression with no case sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The regex to check with</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notnull": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notNull</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is not null</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "notthrows": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notThrows</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in function will NOT throw an exception, an exception of a specified type or exception message regex</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target function to execute and check for exceptions</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Match this type with the exception thrown</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Match this regex against the message+detail of the exception</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "nottypeof": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">notTypeOf</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that is NOT a type of the incoming actual data, it uses the internal ColdFusion isValid() function behind the scenes</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The type to check, valid types are: array, binary, boolean, component, date, time, float, numeric, integer, query, string, struct, url, uuid</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "null": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">null</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is null</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The actual data to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "throws": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">throws</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in function will throw an exception</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target function to execute and check for exceptions</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Match this type with the exception thrown</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Match this regex against the message + detail of the exception</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "typeof": {
      "header": "<span class=\"entity-name-class\">Assertion</span>.<span class=\"entity-name-function\">typeOf</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert the type of the incoming actual data, it uses the internal ColdFusion isValid() function behind the scenes</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The type to check, valid types are: array, binary, boolean, component, date, time, float, numeric, integer, query, string, struct, url, uuid</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    }
  },
  "basespec": {
    "addassertions": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">addAssertions</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Add custom assertions to the $assert object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>assertions: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The structure of custom assertion functions to register or a path or instance of a CFC containing all the assertion functions to register</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "addmatchers": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">addMatchers</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Add custom matchers to your expectations</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>matchers: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The structure of custom matcher functions to register or a path or instance of a CFC containing all the matcher functions to register</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "aftereach": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">afterEach</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">This function is used for BDD test suites to store the afterEach() function to execute for a test suite group</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure function</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>data: <span class=\"storage-type\">struct</span></strong></div>\n<div class=\"card-body\">Data bindings</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "aroundeach": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">aroundEach</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">This is used to surround a spec with your own closure code to provide a nice around decoration advice</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure function</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>data: <span class=\"storage-type\">struct</span></strong></div>\n<div class=\"card-body\">Data bindings</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "assert": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">assert</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed expression is true</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expression: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "beforeeach": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">beforeEach</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">This function is used for BDD test suites to store the beforeEach() function to execute for a test suite group</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure function</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>data: <span class=\"storage-type\">struct</span></strong></div>\n<div class=\"card-body\">Data bindings</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "cleardebugbuffer": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">clearDebugBuffer</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Clear the debug array buffer</div></div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "console": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">console</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Send some information to the console via writedump( output=\"console\" )</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>var: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The data to send</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>top: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Apply a top to the dump, by default it does 9999 levels</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "createemptymock": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">createEmptyMock</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Create an empty mock</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>className: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">The class name of the object to mock. The mock factory will instantiate it for you</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>object: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The object to mock, already instantiated</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>callLogging: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">Add method call logging for all mocked methods. Defaults to true</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "createmock": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">createMock</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Create a mock with or without clearing implementations, usually not clearing means you want to build object spies</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>className: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">The class name of the object to mock. The mock factory will instantiate it for you</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>object: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The object to mock, already instantiated</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>clearMethods: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If true, all methods in the target mock object will be removed. You can then mock only the methods that you want to mock. Defaults to false</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "createstub": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">createStub</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Create an empty stub object that you can use for mocking</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>callLogging: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">Add method call logging for all mocked methods. Defaults to true</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>extends: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">Make the stub extend from certain CFC</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>implements: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">Make the stub adhere to an interface</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "debug": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">debug</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Debug some information into the TestBox debugger array buffer</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>var: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The data to debug</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>label: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">The label to add to the debug entry</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>deepCopy: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">By default we do not duplicate the incoming information, but you can :)</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>top: <span class=\"storage-type\">numeric</span></strong></div>\n<div class=\"card-body\">The top numeric number to dump on the screen in the report, defaults to 999</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "describe": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">describe</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The way to describe BDD test suites in TestBox. The title is usually what you are testing or grouping of tests.\nThe body is the function that implements the suite.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>title: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The name of this test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this suite group from testing if true. If this is a closure it must return boolean.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "expect": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">expect</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Start an expectation expression. This returns an instance of Expectation so you can work with its matchers.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The actual value, it is not required as it can be null.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "expectall": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">expectAll</span>(): <span class=\"storage-type\">CollectionExpectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Start a collection expectation expression. This returns an instance of CollectionExpection\nso you can work with its collection-unrolling matches (delegating to Expection).</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual value, it should be an array or a struct.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "expectedexception": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">expectedException</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Expect an exception from the testing spec</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The type to expect</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Optional exception message regular expression to match, by default it matches .*</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "fail": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">fail</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Fail an assertion</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "feature": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">feature</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The way to describe BDD test suites in TestBox. The feature is an alias for describe usually use when you are writing in a Given-When-Then style\nThe body is the function that implements the suite.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>feature: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The name of this test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this suite group from testing if true. If this is a closure it must return boolean.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "generatearoundeachclosuresstack": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">generateAroundEachClosuresStack</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Generates a specs stack for executions</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>closures: <span class=\"storage-type\">array</span></strong></div>\n<div class=\"card-body\">The array of closures data to build</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>suite: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>spec: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target spec</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "getdebugbuffer": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">getDebugBuffer</span>(): <span class=\"storage-type\">array</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Get the debug array buffer from scope</div></div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "getmockbox": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">getMockBox</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Get a reference to the MockBox engine</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>generationPath: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">The path to generate the mocks if passed, else uses default location.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "getproperty": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">getProperty</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Get a private property</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target to get a property from</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>name: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The name of the property to retrieve</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>scope: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The scope to get it from, defaults to 'variables' scope</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>defaultValue: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A default value if the property does not exist</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "given": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">given</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The way to describe BDD test suites in TestBox. The given is an alias for describe usually use when you are writing in a Given-When-Then style\nThe body is the function that implements the suite.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>given: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this suite group from testing if true. If this is a closure it must return boolean.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "hasexpectedexception": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">hasExpectedException</span>(): <span class=\"storage-type\">boolean</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Check if an expected exception is defined</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>specName: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>runner: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "isexpectedexception": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">isExpectedException</span>(): <span class=\"storage-type\">boolean</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Check if the incoming exception is expected or not.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>exception: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>specName: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>runner: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "it": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">it</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The it() function describes a spec or a test in TestBox.  The body argument is the closure that implements\nthe test which usually contains one or more expectations that test the state of the code under test.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>title: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The title of this spec</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this spec belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this spec test from testing if true. If this is a closure it must return boolean.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>data: <span class=\"storage-type\">struct</span></strong></div>\n<div class=\"card-body\">A struct of data you would like to bind into the spec so it can be later passed into the executing body function</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "makepublic": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">makePublic</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Make a private method on a CFC public with or without a new name and returns the target object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target object to expose the method</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>method: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The private method to expose</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>newName: <span class=\"storage-type\">string</span></strong></div>\n<div class=\"card-body\">If passed, it will expose the method with this name, else just uses the same name</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "preparemock": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">prepareMock</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Prepares an already instantiated object to act as a mock for spying and much more</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>object: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The object to mock, already instantiated</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>callLogging: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">Add method call logging for all mocked methods. Defaults to true</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "print": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">print</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Write some output to the ColdFusion output buffer</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "println": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">println</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Write some output to the ColdFusion output buffer using a <br> attached</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "querysim": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">querySim</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">First line are the query columns separated by commas. Then do a consecuent rows separated by line breaks separated by | to denote columns.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>queryData: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "runaftereachclosures": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">runAfterEachClosures</span>(): <span class=\"storage-type\">BaseSpec</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Execute the after each closures in order for a suite and spec</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>suite: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The suite definition</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>spec: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The spec definition</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "runaroundeachclosures": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">runAroundEachClosures</span>(): <span class=\"storage-type\">BaseSpec</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Execute the around each closures in order for a suite and spec</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>suite: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The suite definition</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>spec: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The spec definition</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "runbeforeeachclosures": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">runBeforeEachClosures</span>(): <span class=\"storage-type\">BaseSpec</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Execute the before each closures in order for a suite and spec</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>suite: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The suite definition</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>spec: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The spec definition</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "runspec": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">runSpec</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Run a BDD test in this target CFC</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>spec: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The spec definition to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>suite: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The suite definition this spec belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>testResults: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The testing results object</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>suiteStats: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The suite stats that the incoming spec definition belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>runner: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The runner calling this BDD test</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "runtestmethod": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">runTestMethod</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Runs a xUnit style test method in this target CFC</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>spec: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The spec definition to test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>testResults: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The testing results object</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>suiteStats: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The suite stats that the incoming spec definition belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>runner: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The runner calling this BDD test</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "scenario": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">scenario</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The way to describe BDD test suites in TestBox. The scenario is an alias for describe usually use when you are writing in a Given-When-Then style\nThe body is the function that implements the suite.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>scenario: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this suite group from testing if true. If this is a closure it must return boolean.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "story": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">story</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The way to describe BDD test suites in TestBox. The story is an alias for describe usually use when you are writing using Gherkin-esque language\nThe body is the function that implements the suite.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>story: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The name of this test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this suite group from testing if true. If this is a closure it must return boolean.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "then": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">then</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The then() function describes a spec or a test in TestBox and is an alias for it.  The body argument is the closure that implements\nthe test which usually contains one or more expectations that test the state of the code under test.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>then: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The title of this spec</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this spec belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this spec test from testing if true. If this is a closure it must return boolean.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>data: <span class=\"storage-type\">struct</span></strong></div>\n<div class=\"card-body\">A struct of data you would like to bind into the spec so it can be later passed into the executing body function</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "when": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">when</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">The way to describe BDD test suites in TestBox. The when is an alias for scenario usually use when you are writing in a Given-When-Then style\nThe body is the function that implements the suite.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>when: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>skip: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">A flag or a closure that tells TestBox to skip this suite group from testing if true. If this is a closure it must return boolean.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "xdescribe": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">xdescribe</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">This is a convenience method that makes sure the test suite is skipped from execution</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>title: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The name of this test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test suite</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this suite group belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>asyncAll: <span class=\"storage-type\">boolean</span></strong></div>\n<div class=\"card-body\">If you want to parallelize the execution of the defined specs in this suite group.</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "xit": {
      "header": "<span class=\"entity-name-class\">BaseSpec</span>.<span class=\"entity-name-function\">xit</span>(): <span class=\"storage-type\">any</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">This is a convenience method that makes sure the test spec is skipped from execution</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>title: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The title of this spec</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>body: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The closure that represents the test</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>labels: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The list or array of labels this spec belongs to</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>data: <span class=\"storage-type\">struct</span></strong></div>\n<div class=\"card-body\">A struct of data you would like to bind into the spec so it can be later passed into the executing body function</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    }
  },
  "expectation": {
    "tobe": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBe</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is equal to each other, no case is required</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobebetween": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeBetween</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in actual number or date is between the passed in min and max values</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>min: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected min number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>max: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected max number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobecloseto": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeCloseTo</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in actual number or date is expected to be close to it within +/- a passed delta and optional datepart</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected number or date</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>delta: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The +/- delta to range it</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>datePart: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">If passed in values are dates, then you can use the datepart to evaluate it</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobeempty": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeEmpty</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a a given string, array, structure or query is empty</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobefalse": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeFalse</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is false</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobegt": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeGT</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is greater than the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobegte": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeGTE</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is greater than or equal the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobeinstanceof": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeInstanceOf</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual object is of the expected instance type</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>typeName: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The typename to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobejson": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeJSON</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is JSON</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobelt": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeLT</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is less than the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobelte": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeLTE</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value is less than or equal the target value</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target value</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobenull": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeNull</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is null</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobetrue": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeTrue</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert something is true</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobetypeof": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeTypeOf</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert the type of the incoming actual data, it uses the internal ColdFusion isValid() function behind the scenes</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The type to check, valid types are: array, binary, boolean, component, date, time, float, numeric, integer, query, string, struct, url, uuid</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tobewithcase": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toBeWithCase</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert strings are equal to each other with case.</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>expected: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The expected data</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tohavedeepkey": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toHaveDeepKey</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a given key exists in the passed in struct by searching the entire nested structure</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>key: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The key to check for existence anywhere in the nested structure</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tohavekey": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toHaveKey</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that a given key exists in the passed in struct/object</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>key: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The key to check for existence</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tohavelength": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toHaveLength</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert the size of a given string, array, structure or query</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>length: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The length to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "toinclude": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toInclude</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the given \"needle\" argument exists in the incoming string or array with no case-sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>needle: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The substring to find in a string or the value to find in an array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "toincludewithcase": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toIncludeWithCase</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the given \"needle\" argument exists in the incoming string or array with case-sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>needle: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The substring to find in a string or the value to find in an array</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tomatch": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toMatch</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual data matches the incoming regular expression with no case sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The regex to check with</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tomatchwithcase": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toMatchWithCase</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual data matches the incoming regular expression with case sensitivity</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>actual: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The actual data to check</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">string</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The regex to check with</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tosatisfy": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toSatisfy</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the actual value passes a given truth test (function/closure)</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>target: <span class=\"storage-type\">any</span></strong> <span class=\"required\">&nbsp;Required&nbsp;</span></div>\n<div class=\"card-body\">The target truth test function/closure</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    },
    "tothrow": {
      "header": "<span class=\"entity-name-class\">Expectation</span>.<span class=\"entity-name-function\">toThrow</span>(): <span class=\"storage-type\">Expectation</span>",
      "body": "<div class=\"card\"><div class=\"card-body\">Assert that the passed in function will throw an exception</div></div>\n<h4>ARGUMENT REFERENCE</h4>\n<div class=\"card\"><div class=\"card-header\"><strong>type: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Match this type with the exception thrown</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>regex: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">Match this regex against the message of the exception</div>\n</div>\n\n<div class=\"card\"><div class=\"card-header\"><strong>message: <span class=\"storage-type\">any</span></strong></div>\n<div class=\"card-body\">The message to send in the failure</div>\n</div>\n",
      "links": [
        {
          "href": "https://testbox.ortusbooks.com/content",
          "text": "testbox.ortusbooks.com/content"
        }
      ]
    }
  }
}
